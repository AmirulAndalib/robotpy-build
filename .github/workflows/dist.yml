---
name: dist

on: [push, pull_request]

jobs:
  check:
    runs-on: ubuntu-18.04
    
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Black
      run: |
        pip install black
        black --check --diff .
  
  check-doc:
    runs-on: ubuntu-18.04
    
    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

    - uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Sphinx
      run: |
        pip install -e .
        pip install -r docs/requirements.txt
        cd docs && make clean html SPHINXOPTS="-W --keep-going"
  
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-18.04]
        python_version: [3.6, 3.7, 3.8]
        architecture: [x86, x64]
        exclude:
        - os: macos-latest
          architecture: x86
        - os: ubuntu-18.04
          architecture: x86

    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python_version }}
        architecture: ${{ matrix.architecture }}

    - name: Install build dependencies
      run: pip install wheel

    - name: Build wheel
      run: python setup.py bdist_wheel
    
    - name: Test wheel
      shell: bash
      env:
        RPYBUILD_PARALLEL: 1
        RPYBUILD_STRIP_LIBPYTHON: 1
      run: |
        cd dist
        python -m pip install *.whl
        cd ../tests
        python -m pip install -r requirements.txt
        python run_tests.py

  publish:
    runs-on: ubuntu-latest
    needs: [check, check-doc, test]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')

    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    
    - uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - run: pip install wheel

    - name: Build packages
      run: python setup.py sdist bdist_wheel
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
